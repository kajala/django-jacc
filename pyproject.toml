[build-system]
requires = ["setuptools>=80.9.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-jacc"
version = "3.12.3"
description = "Collection of small utilities for Django and Django REST framework projects."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
license-files = ["LICENSE.txt"]
authors = [
  { name = "Jani Kajala", email = "kajala@gmail.com" }
]
dependencies = [
    "Django>=3.2",
    "django-jutil>=3.7.1",
    "django-filter>=2.0.0",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["jacc*"]

[project.urls]
"Homepage" = "https://github.com/kajala/django-jacc"
"Issues" = "https://github.com/kajala/django-jacc/issues"

[tool.black]
line-length = 159

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "project.settings"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 159

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]

# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
